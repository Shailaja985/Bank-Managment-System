package com.bms.app;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

import com.bms.app.controller.UserController;
import com.bms.app.data.UserEntity;
import com.bms.app.repository.UserRepository;
import com.bms.app.repository.UserRepositoryImpl;
import com.bms.app.service.UserServiceImpl;
import com.bms.app.shared.UserDto;
import static org.mockito.Mockito.when;

@SpringBootTest
class BmsUserUpdateApplicationTests {

	@InjectMocks
	UserServiceImpl serviceImpl;
	
	
	
	@InjectMocks
	UserController userController;

	@Mock
	UserRepositoryImpl userRepositoryImpl;
	
	@Mock
	UserRepository userRepository;
	
	
	 @Test
	    public void testcustupdate(){
		 UserEntity userEntity=new UserEntity(101,"shails","klnagar","kar","Ind","shails@gmail.com",
			       "7987dhf","99999999","29/01/2019","self","1234567890123456","password1");
	UserDto userDto=new UserDto("shails","klnagar","kar","Ind","shails@gmail.com",
		       "7987dhf","99999999","29/01/2019","self","password1");
			when(userRepository.save(userEntity)).thenReturn(userEntity);
			
			userController.updateUser(userEntity, 99);
			userController.breaker(null, 99);
		    UserEntity cust = new UserEntity();
					cust.setAddress("address");
				    cust.setCounty("country");
					cust.setEmail("email@yahoo.com");
					cust.setContactNumber("1234567891");
					cust.setState("state");
					cust.setUserName("username");
					
					userRepository.save(cust); 
				

				UserEntity customer =userController.updateUser(cust, 99);
				userController.breaker(null, -1);

}
